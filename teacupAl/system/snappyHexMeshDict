/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh off;
snap            off;
addLayers       on;

geometry
{
    fluid
    {
        type triSurfaceMesh;
        file "fluid.stl";
        regions
        {
            left       { name left; }
            right       { name right; } 
            front      { name front; }
            back       { name back; }
            top        { name top; }
            bottom     { name bottom; }
            cupbottom  { name cupbottom; }
        }
    }
    cup
    {
        type triSurfaceMesh;
        file "cup.stl";
    }
    tea
    {
        type triSurfaceMesh;
        file "tea.stl";
        regions
        {
            interface_fluidToTea       { name teaToFluid; }
            interface_cupToTea       { name teaToCup; } 
        }
    }
};

castellatedMeshControls
{
    features
    (
        {
            file "cup.eMesh";
            level 0;
        }
        {
            file "tea.eMesh";
            level 0;
        }
    );
    refinementSurfaces
    {
        fluid
        {
            level (0 0);
            regions 
            {
                left       { level (0 0); patchInfo { type patch; }}
                right      { level (0 0); patchInfo { type patch; }}
                front      { level (0 0); patchInfo { type wall; }}
                back       { level (0 0); patchInfo { type wall; }}
                top        { level (0 0); patchInfo { type wall; }}
                bottom     { level (0 0); patchInfo { type wall; }}
                cupbottom  { level (3 3); patchInfo { type wall; }}
            }
        }
        cup
        {
            level (3 3);
            faceZone cup;
            cellZone cup;
            cellZoneInside insidePoint;
            insidePoint (0.049 0 0);
        }
        tea
        {
            level (2 3);
            regions
            {
                teaToFluid      { level (2 3); patchInfo { type wall; }}
                teaToCup        { level (2 3); patchInfo { type wall; }}
            }
            faceZone tea;
            cellZone tea;
            cellZoneInside insidePoint;
            insidePoint (0 -0.1 0);
        }
    }

    resolveFeatureAngle 30;

    refinementRegions
    {

    }
    locationInMesh (0 0.1 0);
    nCellsBetweenLevels 3;
    allowFreeStandingZoneFaces no;
}

snapControls
{
//  explicitFeatureSnap    true;
//  implicitFeatureSnap    false;
    nSmoothPatch 3;
    tolerance 1.2;
    nSolveIter 185;
    nRelaxIter 4;
    nFeatureSnapIter 5;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
}

addLayersControls
{
    layers
    {
        cup 
        {
            nSurfaceLayers  2;
        }
        tea 
        {
            nSurfaceLayers  2;
        }
    }

    relativeSizes       true; // false, usually with firstLayerThickness
    expansionRatio      1.1;
    finalLayerThickness 0.3;
    minThickness        1e-3;
    nGrow 0;
    featureAngle 85;
    slipFeatureAngle 25;
    nRelaxIter 5;
    nSmoothSurfaceNormals 4;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.2;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
//  firstLayerThickness 0.01;
//  maxThicknessToMedialRatio 0.6;
}

meshQualityControls
{
//    minTetQuality -1e+30;
}

writeFlags
(
//    scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-6;

// ************************************************************************* //
